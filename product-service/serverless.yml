service: my-first-app-mfialko-product-service

provider:
  name: aws
  runtime: nodejs20.x
  region: eu-west-1
  profile: default
  environment:
    PRODUCTS_TABLE: products
    STOCKS_TABLE: stocks
    SNS_ARN: 
      Ref: SNSTopic
  iam:
    role: AccessDynamoDB

resources:
  Resources:

    AccessDynamoDB:
      Type: AWS::IAM::Role
      Properties:
        RoleName: AccessDynamoDB 
        AssumeRolePolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Principal:
                Service:
                  - lambda.amazonaws.com
              Action: sts:AssumeRole
        Policies:
          - PolicyName: accessPolicy
            PolicyDocument:
              Version: '2012-10-17'
              Statement:
                - Effect: Allow
                  Action:
                    - logs:CreateLogGroup
                    - logs:CreateLogStream
                    - logs:PutLogEvents
                    - logs:TagResource
                  Resource:
                    - 'Fn::Join':
                      - ':'
                      -
                        - 'arn:aws:logs'
                        - Ref: 'AWS::Region'
                        - Ref: 'AWS::AccountId'
                        - 'log-group:/aws/lambda/*:*:*'
                - Effect: Allow
                  Action:
                    - dynamodb:GetItem
                    - dynamodb:PutItem
                    - dynamodb:UpdateItem
                    - dynamodb:Query
                    - dynamodb:Scan
                    - dynamodb:DeleteItem
                  Resource: "arn:aws:dynamodb:${self:provider.region}:*:table/*"
                - Effect: Allow
                  Action:
                    - sqs:*
                  Resource: "arn:aws:sqs:eu-west-1:601172069419:import-service"
                - Effect: Allow
                  Action:
                    - sns:*
                  Resource: 
                    Ref: SNSTopic
  
    ProductsDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: products

    StocksDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          - AttributeName: product_id
            AttributeType: S
        KeySchema:
          - AttributeName: product_id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: stocks


    SNSTopic:
      Type: AWS::SNS::Topic
      Properties: 
        TopicName: createProductTopic

    createProductEmailSubscription:
      Type: AWS::SNS::Subscription
      Properties:
        Protocol: email
        TopicArn:
          Ref: SNSTopic
        Endpoint: mfialko.epam.work@gmail.com

        
functions:
  getProducts:
    handler: dist/getProducts.handler
    events:
      - http:
          path: products
          method: get
          cors: true

  getProductById:
    handler: dist/getProductById.handler
    events:
      - http:
          path: products/{id}
          method: get
          cors: true

  createProduct:
    handler: dist/createProduct.handler
    events:
      - http:
          path: products
          method: post
          cors: true

  catalogBatchProcess:
    handler: dist/catalogBatchProcess.handler
    url: true
    events:
      - sqs:
          arn: "arn:aws:sqs:eu-west-1:009688690949:import-service-queue"
          batchSize: 5



      
package:
  individually: true
  excludeDevDependencies: false
  exclude: ['node_modules/**']

